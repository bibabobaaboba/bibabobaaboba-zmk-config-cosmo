/* upstream bindings and behaviors */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        dot {
            bindings = <&kp DOT>;
            key-positions = <22 21>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <21 19>;
        };

        apostrophe {
            bindings = <&kp SQT>;
            key-positions = <8 21>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <21 20>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <21 19 22>;
        };

        dquotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <21 7>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <30 31>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <6 7>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <19 18>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <19 18 20>;
        };

        lbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <6 39>;
        };

        lparenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <39 19>;
        };

        lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <31 39>;
        };

        rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <39 7>;
        };

        rparenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <39 20>;
        };

        rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <39 32>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <9 20 31>;
        };

        bslach {
            bindings = <&kp BACKSLASH>;
            key-positions = <7 20 33>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <19 8 21>;
        };

        lthan {
            bindings = <&kp LESS_THAN>;
            key-positions = <19 8>;
        };

        gthan {
            bindings = <&kp GREATER_THAN>;
            key-positions = <7 20>;
        };

        caps {
            bindings = <&caps_word>;
            key-positions = <18 17>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <40 19 8>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <19 10>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <19 6>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <7 33>;
        };

        exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <7 8 21>;
        };

        question {
            bindings = <&kp EXCLAMATION>;
            key-positions = <9 20 19>;
        };

        dolla {
            bindings = <&kp DOLLAR>;
            key-positions = <31 32 9>;
        };

        atsign {
            bindings = <&kp AT_SIGN>;
            key-positions = <7 20 21>;
        };

        amp {
            bindings = <&kp AMPERSAND>;
            key-positions = <18 20>;
        };

        ast {
            bindings = <&kp ASTERISK>;
            key-positions = <30 31 32>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <8 7 6>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <19 20>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21 19 22>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <7 8 9>;
        };

        pd {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <30 33>;
        };

        pup {
            bindings = <&kp PAGE_UP>;
            key-positions = <18 21>;
        };

        l {
            bindings = <&mkp LCLK>;
            key-positions = <31 32>;
        };

        r {
            bindings = <&mkp RCLK>;
            key-positions = <32 33>;
        };

        m {
            bindings = <&mkp MCLK>;
            key-positions = <32 33 31>;
        };

        btclear {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <1 2 3 37 10 9 8 40 7 4>;
        };

        func {
            bindings = <&mo 3>;
            key-positions = <13 14>;
        };

        nums {
            bindings = <&mo 2>;
            key-positions = <15 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E                  &kp R      &kp T    &kp Y          &kp U      &kp I       &kp O    &kp P     &kp LBKT
&kp LEFT_SHIFT  &kp A  &kp S  &kp D                  &kp F      &kp G    &kp H          &kp J      &kp K       &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C                  &kp V      &kp B    &kp N          &kp M      &kp COMMA   &kp DOT  &kp FSLH  &trans
                              &mt LEFT_ALT LEFT_WIN  &kp SPACE  &mo 1    &kp BACKSPACE  &kp SPACE  &kp DELETE
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &trans  &trans    &trans    &trans  &trans     &trans
&trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans  &trans     &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        nums {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N1  &kp N2  &kp N3  &trans     &trans
                        &trans  &trans  &trans    &trans  &kp N0  &trans
            >;
        };

        func {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans   &trans
            >;
        };
    };
};
